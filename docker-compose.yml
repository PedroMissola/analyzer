networks:
  app-network:
    driver: bridge

volumes:
  pocketbase_data:
    driver: local

services:
  pocketbase:
    build:
      context: ./pocketbase
      dockerfile: Dockerfile
    container_name: pocketbase-service
    restart: unless-stopped
    volumes:
      - pocketbase_data:/pb/pb_data
      - ./pocketbase/pb_hooks:/pb/pb_hooks
    networks:
      - app-network
    environment:
      - TZ=${TZ}
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8090/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker-service
    restart: unless-stopped
    environment:
      - POCKETBASE_URL=http://pocketbase:8090
      - PB_ADMIN_EMAIL=${PB_ADMIN_EMAIL}
      - PB_ADMIN_PASSWORD=${PB_ADMIN_PASSWORD}
      - WORKER_CRON_SCHEDULE=${WORKER_CRON_SCHEDULE}
      - LOCATION_LATITUDE=${LOCATION_LATITUDE}
      - LOCATION_LONGITUDE=${LOCATION_LONGITUDE}
      - OPEN_METEO_FORECAST_URL=${OPEN_METEO_FORECAST_URL}
      - OPEN_METEO_AIR_QUALITY_URL=${OPEN_METEO_AIR_QUALITY_URL}
      - ALERT_EMAIL_RECIPIENT=${ALERT_EMAIL_RECIPIENT}
      - TZ=${TZ}
    depends_on:
      pocketbase:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./worker:/app
      - /app/node_modules
    command: npm run dev

  analyzer:
    build:
      context: ./analyzer
      dockerfile: Dockerfile
    container_name: analyzer-service
    restart: unless-stopped
    environment:
      - POCKETBASE_URL=http://pocketbase:8090
      - PB_ADMIN_EMAIL=${PB_ADMIN_EMAIL}
      - PB_ADMIN_PASSWORD=${PB_ADMIN_PASSWORD}
      - ANALYZER_CRON_SCHEDULE=${ANALYZER_CRON_SCHEDULE}
      - LOCATION_LATITUDE=${LOCATION_LATITUDE}
      - LOCATION_LONGITUDE=${LOCATION_LONGITUDE}
      - TZ=${TZ}
    depends_on:
      pocketbase:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./analyzer:/app
      - /app/node_modules
    command: npm run dev

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-service
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - TZ=${TZ}
    depends_on:
      - pocketbase
    networks:
      - app-network